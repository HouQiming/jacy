__PARSE_GLLOADER
glClearColor,"void()stdcall( GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha )":"glClearColor"
glClear,"void()stdcall( GLbitfield mask )":"glClear"
glAlphaFunc,"void()stdcall( GLenum func, GLclampf ref )":"glAlphaFunc"
glBlendFunc,"void()stdcall( GLenum sfactor, GLenum dfactor )":"glBlendFunc"
glCullFace,"void()stdcall( GLenum mode )":"glCullFace"
glFrontFace,"void()stdcall( GLenum mode )":"glFrontFace"
glPointSize,"void()stdcall( GLfloat size )":"glPointSize"
glLineWidth,"void()stdcall( GLfloat width )":"glLineWidth"
glPolygonMode,"void()stdcall( GLenum face, GLenum mode )":"glPolygonMode"
glClipPlane,"void()stdcall( GLenum plane, GLdouble *equation )":"glClipPlane"
glGetClipPlane,"void()stdcall( GLenum plane, GLdouble *equation )":"glGetClipPlane"
glEnable,"void()stdcall( GLenum cap )":"glEnable"
glDisable,"void()stdcall( GLenum cap )":"glDisable"
glIsEnabled,"GLboolean()stdcall( GLenum cap )":"glIsEnabled"
glEnableClientState,"void()stdcall( GLenum cap )":"glEnableClientState"
glDisableClientState,"void()stdcall( GLenum cap )":"glDisableClientState"
glGetBooleanv,"void()stdcall( GLenum pname, GLboolean *params )":"glGetBooleanv"
glGetDoublev,"void()stdcall( GLenum pname, GLdouble *params )":"glGetDoublev"
glGetFloatv,"void()stdcall( GLenum pname, GLfloat *params )":"glGetFloatv"
glGetIntegerv,"void()stdcall( GLenum pname, GLint *params )":"glGetIntegerv"
glPushAttrib,"void()stdcall( GLbitfield mask )":"glPushAttrib"
glPopAttrib,"void()stdcall()":"glPopAttrib"
glPushClientAttrib,"void()stdcall( GLbitfield mask )":"glPushClientAttrib"
glPopClientAttrib,"void()stdcall()":"glPopClientAttrib"
glGetError,"GLenum()stdcall()":"glGetError"
glGetString,"GLubyte*()stdcall( GLenum name )":"glGetString"
glFlush,"void()stdcall()":"glFlush"
glFinish,"void()stdcall()":"glFinish"
glClearDepth,"void()stdcall( GLclampd depth )":"glClearDepth"
glDepthFunc,"void()stdcall( GLenum func )":"glDepthFunc"
glDepthMask,"void()stdcall( GLboolean flag )":"glDepthMask"
glViewport,"void()stdcall( GLint x, GLint y, GLsizei width, GLsizei height )":"glViewport"
glMatrixMode,"void()stdcall( GLenum mode )":"glMatrixMode"
glLoadMatrixf,"void()stdcall( GLfloat *m )":"glLoadMatrixf"
glStencilFunc,"void()stdcall( GLenum func, GLint ref, GLuint mask )":"glStencilFunc"
glStencilMask,"void()stdcall( GLuint mask )":"glStencilMask"
glStencilOp,"void()stdcall( GLenum fail, GLenum zfail, GLenum zpass )":"glStencilOp"
glClearStencil,"void()stdcall( GLint s )":"glClearStencil"
glTexParameterf,"void()stdcall( GLenum target, GLenum pname, GLfloat param )":"glTexParameterf"
glTexParameteri,"void()stdcall( GLenum target, GLenum pname, GLint param )":"glTexParameteri"
glTexParameterfv,"void()stdcall( GLenum target, GLenum pname, GLfloat *params )":"glTexParameterfv"
glTexParameteriv,"void()stdcall( GLenum target, GLenum pname, GLint *params )":"glTexParameteriv"
glGetTexParameterfv,"void()stdcall( GLenum target, GLenum pname, GLfloat *params)":"glGetTexParameterfv"
glGetTexParameteriv,"void()stdcall( GLenum target, GLenum pname, GLint *params )":"glGetTexParameteriv"
glGetTexLevelParameterfv,"void()stdcall( GLenum target, GLint level, GLenum pname, GLfloat *params )":"glGetTexLevelParameterfv"
glGetTexLevelParameteriv,"void()stdcall( GLenum target, GLint level, GLenum pname, GLint *params )":"glGetTexLevelParameteriv"
glTexImage1D,"void()stdcall( GLenum target, GLint level, GLint internalFormat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid *pixels )":"glTexImage1D"
glTexImage2D,"void()stdcall( GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid *pixels )":"glTexImage2D"
glGetTexImage,"void()stdcall( GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels )":"glGetTexImage"
glGenTextures,"void()stdcall( GLsizei n, GLuint *textures )":"glGenTextures"
glDeleteTextures,"void()stdcall( GLsizei n, GLuint *textures)":"glDeleteTextures"
glBindTexture,"void()stdcall( GLenum target, GLuint texture )":"glBindTexture"
glIsTexture,"GLboolean()stdcall( GLuint texture )":"glIsTexture"
glTexSubImage1D,"void()stdcall( GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid *pixels )":"glTexSubImage1D"
glTexSubImage2D,"void()stdcall( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels )":"glTexSubImage2D"
glCopyTexImage1D,"void()stdcall( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border )":"glCopyTexImage1D"
glCopyTexImage2D,"void()stdcall( GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border )":"glCopyTexImage2D"
glCopyTexSubImage1D,"void()stdcall( GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width )":"glCopyTexSubImage1D"
glCopyTexSubImage2D,"void()stdcall( GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height )":"glCopyTexSubImage2D"
glVertexPointer,"void()stdcall( GLint size, GLenum type, GLsizei stride, GLvoid *ptr )":"glVertexPointer"
glNormalPointer,"void()stdcall( GLenum type, GLsizei stride, GLvoid *ptr )":"glNormalPointer"
glColorPointer,"void()stdcall( GLint size, GLenum type, GLsizei stride, GLvoid *ptr )":"glColorPointer"
glIndexPointer,"void()stdcall( GLenum type, GLsizei stride, GLvoid *ptr )":"glIndexPointer"
glTexCoordPointer,"void()stdcall( GLint size, GLenum type, GLsizei stride, GLvoid *ptr )":"glTexCoordPointer"
glEdgeFlagPointer,"void()stdcall( GLsizei stride, GLvoid *ptr )":"glEdgeFlagPointer"
glGetPointerv,"void()stdcall( GLenum pname, GLvoid **params )":"glGetPointerv"
glArrayElement,"void()stdcall( GLint i )":"glArrayElement"
glDrawArrays,"void()stdcall( GLenum mode, GLint first, GLsizei count )":"glDrawArrays"
glDrawElements,"void()stdcall( GLenum mode, GLsizei count, GLenum type, GLvoid *indices )":"glDrawElements"
glInterleavedArrays,"void()stdcall( GLenum format, GLsizei stride, GLvoid *pointer )":"glInterleavedArrays"
glReadPixels,"void()stdcall( GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels )":"glReadPixels"
glColorMask,"void()stdcall( GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha )":"glColorMask"
glScissor,"void()stdcall(GLint x, GLint y, GLsizei width, GLsizei height )":"glScissor"
glPixelStorei,"void()stdcall(GLenum pname, GLint param)":"glPixelStorei"
glHint,"void()stdcall(GLenum target, GLenum mode)":"glHint"
glDepthRange,"void()stdcall(GLdouble near,GLdouble far)":"glDepthRange"
;
